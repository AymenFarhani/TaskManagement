@model List<TaskManagement.Models.Entities.TaskItem>

<h1>Tasks</h1> <a class="btn btn-success" asp-action="AddTask" asp-controller="Task">Add New Task</a>
<table class="table">
    <thead>
        <tr>
            <th>Title</th>
            <th>Description</th>
            <th>Priority</th>
            <th>Status</th>
            <th>DueDate</th>
            <th>CreatedAt</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var task in Model)
        {
            <tr>
                <td>@task.Title</td>
                <td>@task.Description</td>
                <td>@task.Priority.ToString()</td>
                <td>@task.Status.ToString()</td>
                <td>@task.DueDate.ToString("yyyy-MM-dd")</td>
                <td>@task.CreatedAt</td>
                <td>
                    <a class="btn btn-primary" asp-controller="Task" asp-action="EditTask" asp-route-id="@task.Id">Edit</a>
                    <a class="btn btn-danger" asp-controller="Task" asp-action="DeleteTask"
                        asp-route-id="@task.Id">Delete</a>
                    <button class="btn btn-warning" onclick="showTaskHistory('@task.Id')">History</button>

                </td>
            </tr>
        }
    </tbody>

</table>

<div class="modal" id="historyModal" tabindex="-1" style="display:none; position: fixed; top:0; left:0; width: 100%; height: 100%; background: rgba(0,0,0,0.5); overflow-y: auto;">
    <div style="background:white; margin: 10% auto; padding: 20px; width: 90%; max-width: 700px; border-radius: 5px; position: relative;">
        <h5>Task History</h5>
        <button onclick="closeHistoryModal()" style="position: absolute; top: 10px; right: 15px; font-size: 18px; background: none; border: none; cursor: pointer;">&times;</button>
        <div id="historyContent" style="max-height: 400px; overflow-y: auto; margin-top: 15px;">
            <p>Loading...</p>
        </div>
    </div>
</div>


@section Scripts {
<script>
    async function showTaskHistory(taskId) {
        const modal = document.getElementById('historyModal');
        const contentDiv = document.getElementById('historyContent');
        contentDiv.innerHTML = "<p>Loading...</p>";
        modal.style.display = 'block';

        try {
            const response = await fetch(`/Task/GetTaskHistory?taskId=${taskId}`);
            if (!response.ok) {
                contentDiv.innerHTML = "<p>Error loading history.</p>";
                return;
            }
            const logs = await response.json();

            if (logs.length === 0) {
                contentDiv.innerHTML = "<p>No history available for this task.</p>";
                return;
            }

            // Build the history table
            let html = `<table style="width: 100%; border-collapse: collapse;">
                <thead>
                    <tr style="border-bottom: 1px solid #ccc;">
                        <th style="padding: 8px; text-align: left;">Field</th>
                        <th style="padding: 8px; text-align: left;">Old Value</th>
                        <th style="padding: 8px; text-align: left;">New Value</th>
                        <th style="padding: 8px; text-align: left;">Changed At</th>
                    </tr>
                </thead>
                <tbody>`;

            logs.forEach(log => {
                html += `<tr style="border-bottom: 1px solid #eee;">
                    <td style="padding: 8px;">${log.fieldChanged}</td>
                    <td style="padding: 8px;">${log.oldValue || ''}</td>
                    <td style="padding: 8px;">${log.newValue || ''}</td>
                    <td style="padding: 8px;">${log.modifiedAt}</td>
                </tr>`;
            });

            html += "</tbody></table>";
            contentDiv.innerHTML = html;

        } catch (error) {
            contentDiv.innerHTML = "<p>Error loading history.</p>";
            console.error(error);
        }
    }

    function closeHistoryModal() {
        document.getElementById('historyModal').style.display = 'none';
    }

    // Optional: close modal when clicking outside content
    window.onclick = function(event) {
        const modal = document.getElementById('historyModal');
        if (event.target === modal) {
            modal.style.display = 'none';
        }
    }
</script>
}